name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    name: Test
    needs:
      - lint
      - scan_ruby
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://postgres:example@127.0.0.1:5432/challenge_test
    services:
      postgres:
        image: postgres:15.0
        ports: ["5432:5432"]
        env:
          POSTGRES_DB: challenge_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: example
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: .node-version

      - name: Install JavaScript dependencies
        run: yarn install

      - name: Precompile assets
        run: RAILS_ENV=test bundle exec rails assets:precompile

      - name: Install postgres client
        run: sudo apt-get install libpq-dev

      - name: Create database structure
        run: RAILS_ENV=test bundle exec rails db:create db:schema:load

      - name: Run tests
        run: bundle exec rspec spec --format progress
